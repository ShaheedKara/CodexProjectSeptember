
@{
    ViewBag.Title = "NewBooking";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /*element {
        --background-color: #F7F8FA;
        --main-color: #4D637B;
        --main-black: #676767;
        --main-gray: #c3c3c3;
        --secondary-color: #75b2f5;
        --secondary-color-variant: #5094de;
        --default-padding: 15px;
        --big-padding: 30px;
        --huge-padding: 50px;
        --wrapper-size: 1080px;
        --wizard-size: 620px;
        --circle-size: 40px;
        --line-height: 6px;
        --default-border-radius: 5px;
        --animation-time: .5s;
        --curve: cubic-bezier(0.650, 0.000, 0.450, 1.000);
        --background-url: 'http://cdn-image.travelandleisure.com/sites/default/files/styles/1600x1000/public/1444253482/DG2015-paris.jpg?itok=XH81cBH9';
    }

    body, html {
        padding: 0;
        margin: 0;
        background: var(--background-color);
        font-family: 'Lato', sans-serif;
        color:var(--main-black);
    }
    .wrapper{
  position: relative;
  max-width: var(--wrapper-size);
  margin: 50px auto;
}

    .wizard {
        max-width: var(--wizard-size);
        margin: 0 auto;


  &__header{
    position: relative;
    color: #FFF;
    padding: var(--huge-padding);
    border-radius: var(--default-border-radius);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    text-align: center;
    height: 100px;

    background: url($background-url);
    background-color: var(--main-color);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  &__header-content{
    position: absolute;
    width: 100%;
    padding: 0 var(--huge-padding);
    text-align: center;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -60%);
  }

  &__header-overlay{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: var(--main-color);
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
  }

  &__title{
    font-size: 1.5rem;
    line-height: 2rem;
    margin: 0;
  }

  &__subheading{
    text-transform: uppercase;
    margin: 0;
    font-size: .8rem;
    font-weight: 100;
    letter-spacing: 2px;

    span{
      font-weight: 600;
    }
  }

  &__steps{
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    transform: translateY(50%);
    z-index: 10;
  }

  &__footer{
    padding: 0 var(--huge-padding) var(--huge-padding);
    border-radius: var(--default-border-radius);
  }

  &__content{
    background: #FFF;
    box-shadow: 0px 0px 10px #c5c5c5;
    border-radius: var(--default-border-radius);
  }

  &__congrats-message{
    color:var(--main-black);
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;

  }

  &.completed{
    .wizard__content{
      animation: gettingOut 2s cubic-bezier(1,-0.71, 1, 1.16) forwards;
    }

    .wizard__congrats-message{
      animation: fadeIn 2s cubic-bezier(1,-0.71, 1, 1.16) forwards;
    }
  }
}


.line{
  position: absolute;
  top: var(--circle-size) / 2;
  left: 50%;
  z-index: -1;
  height: var(--line-height;)
  transition: all var(--animation-time ease);

  &.-start{
    left: 0%;
    background: var(--secondary-color-variant);
    width: 50%;
  }

  &.-end{
    left: 50%;
    background: var(--secondary-color-variant);
    width: 50%;
  }

  &.-background{
    background: var(--main-gray);
    width: 100%;
  }

  &.-progress{
    background: var(--secondary-color-variant);
    width: 100%;
    transform: scaleX(0);
    transform-origin: left center;
  }

  &.-in-progress{
    transform: scaleX(1);
  }
}


.panels{
  position: relative;
  overflow: hidden;
}

.panel{
  position: absolute;
  top: 0;
  left: 0;
  transition: .5s all;
  padding: var(--huge-padding);

  &__header{
    margin-bottom: var(--big-padding);
  }

  &__title{
    font-size: 1.5rem;
    line-height: 2rem;
    margin: 0;
  }

  &__subheading{
    font-size: .9rem;
    line-height: 1.2rem;
    margin: 0;
  }

  &.movingOutBackward{
    transform: translateX(var(--wizard-size) * -1);
  }

  &.movingOutFoward{
    transform: translateX(var(--wizard-size));
  }

  &.movingIn{
    transform: translateX(0);
  }
}


.steps{
  position: relative;
  display: flex;
  flex: 0 1 auto;
  color: #fff;
}

.step{
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  box-sizing: border-box;
  text-align: center;
  border-radius: 5px;

  &__content{
    position: relative;
    z-index: 2;
  }

  &__number{
    font-size: 1.3rem;
    color:var(--main-black);
    background: #FFF;
    font-weight: 800;
    width: var(--circle-size);
    height: var(--circle-size);
    line-height: var(--circle-size);
    margin: 0 auto;
    border-radius: 50%;
    border: 5px solid var(--main-gray);

    transition: opacity .5s;
    opacity: 1;
    z-index: 5;
  }

  &.-completed{
    .step__number{
      opacity: 0;
    }

    .checkmark{
      z-index: 0;
      animation:  fill .4s ease-in-out forwards,
                  scale .3s ease-in-out .6s both;
    }

    .checkmark__check {
      animation: stroke .5s linear .4s forwards;
    }

    .line{
      transform: scaleX(1);
    }
  }

  &:last-child{
    .line{
      width: 50%;
    }
  }
}


.checkmark {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: var(--circle-size) + 10px;
  height: var(--circle-size) + 10px;
  border-radius: 50%;
  stroke-width: 2;
  stroke: #fff;
  stroke-miterlimit: 10;
  box-shadow: inset 0px 0px 0px var(--secondary-color);
  z-index: -1;

  &__circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 8;
    stroke-miterlimit: 10;
    stroke: var(--secondary-color-variant);
    fill: none;
    animation: stroke .6s var(--curve) forwards;
  }

  &__check {
    transform-origin: 50% 50%;
    stroke-dasharray: 40;
    stroke-dashoffset: 40;
    stroke: #FFF;
    stroke-width: 5;
  }
}


.button{
  cursor: pointer;
  font-size: 1rem;
  line-height: 1rem;
  background: var(--secondary-color-variant);
  color: #FFF;
  padding: 10px 15px;
  border: none;
  outline: none;
  display: inline-block;
  transition: all .3s;

  &:hover{
    background: var(--secondary-color-variant);
  }

  &.previous{
    margin-right: 5px;
  }

  &.disabled{
    background: var(--main-gray);
    cursor: default;
  }
}
    @@keyframes stroke {
  to {
    stroke-dashoffset: 0;
  }
}
@@keyframes scale {
  50% {
    transform: translateX(-50%) scale3d(1.5, 1.5, 1.5);
  }
  100% {
    transform: scale3d(0);
  }
}
@@keyframes fill {
  100% {
    box-shadow: inset 0px 0px 0px 30px #75b2f5;
  }
}
@@keyframes gettingOut {
  0% {
    transform: translateY(0%);
  }
  30% {
    transform: translateY(100px);
  }
  100% {
    transform: translateY(-200%);
  }
}
@@keyframes fadeIn {
  100% {
    opacity: 1;
  }
}*/
    body, html {
  padding: 0;
  margin: 0;
  background: #F7F8FA;
  font-family: 'Lato', sans-serif;
  color: #676767;
}

.wrapper {
  position: relative;
  max-width: 1080px;
  margin: 50px auto;
}

.wizard {
  max-width: 620px;
  margin: 0 auto;
}
.wizard__header {
  position: relative;
  color: #FFF;
  padding: 50px;
  border-radius: 5px;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  text-align: center;
  height: 100px;
  background: url("http://cdn-image.travelandleisure.com/sites/default/files/styles/1600x1000/public/1444253482/DG2015-paris.jpg?itok=XH81cBH9");
  background-color: #4D637B;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}
.wizard__header-content {
  position: absolute;
  width: 100%;
  padding: 0 50px;
  text-align: center;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -60%);
}
.wizard__header-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(77, 99, 123, 0.6);
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}
.wizard__title {
  font-size: 1.5rem;
  line-height: 2rem;
  margin: 0;
}
.wizard__subheading {
  text-transform: uppercase;
  margin: 0;
  font-size: .8rem;
  font-weight: 100;
  letter-spacing: 2px;
}
.wizard__subheading span {
  font-weight: 600;
}
.wizard__steps {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  transform: translateY(50%);
  z-index: 10;
}
.wizard__footer {
  padding: 0 50px 50px;
  border-radius: 5px;
}
.wizard__content {
  background: #FFF;
  box-shadow: 0px 0px 10px #c5c5c5;
  border-radius: 5px;
}
.wizard__congrats-message {
  color: #676767;
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
}
.wizard.completed .wizard__content {
  animation: gettingOut 2s cubic-bezier(1, -0.71, 1, 1.16) forwards;
}
.wizard.completed .wizard__congrats-message {
  animation: fadeIn 2s cubic-bezier(1, -0.71, 1, 1.16) forwards;
}

.line {
  position: absolute;
  top: 20px;
  left: 50%;
  z-index: -1;
  height: 6px;
  transition: all 0.5s ease;
}
.line.-start {
  left: 0%;
  background: #5094de;
  width: 50%;
}
.line.-end {
  left: 50%;
  background: #5094de;
  width: 50%;
}
.line.-background {
  background: #c3c3c3;
  width: 100%;
}
.line.-progress {
  background: #5094de;
  width: 100%;
  transform: scaleX(0);
  transform-origin: left center;
}
.line.-in-progress {
  transform: scaleX(1);
}

.panels {
  position: relative;
  overflow: hidden;
}

.panel {
  position: absolute;
  top: 0;
  left: 0;
  transition: .5s all;
  padding: 50px;
}
.panel__header {
  margin-bottom: 30px;
}
.panel__title {
  font-size: 1.5rem;
  line-height: 2rem;
  margin: 0;
}
.panel__subheading {
  font-size: .9rem;
  line-height: 1.2rem;
  margin: 0;
}
.panel.movingOutBackward {
  transform: translateX(-620px);
}
.panel.movingOutFoward {
  transform: translateX(620px);
}
.panel.movingIn {
  transform: translateX(0);
}

.steps {
  position: relative;
  display: flex;
  flex: 0 1 auto;
  color: #fff;
}

.step {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  box-sizing: border-box;
  text-align: center;
  border-radius: 5px;
}
.step__content {
  position: relative;
  z-index: 2;
}
.step__number {
  font-size: 1.3rem;
  color: #676767;
  background: #FFF;
  font-weight: 800;
  width: 40px;
  height: 40px;
  line-height: 40px;
  margin: 0 auto;
  border-radius: 50%;
  border: 5px solid #c3c3c3;
  transition: opacity .5s;
  opacity: 1;
  z-index: 5;
}
.step.-completed .step__number {
  opacity: 0;
}
.step.-completed .checkmark {
  z-index: 0;
  animation: fill .4s ease-in-out forwards,  scale .3s ease-in-out .6s both;
}
.step.-completed .checkmark__check {
  animation: stroke .5s linear .4s forwards;
}
.step.-completed .line {
  transform: scaleX(1);
}
.step:last-child .line {
  width: 50%;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  stroke-width: 2;
  stroke: #fff;
  stroke-miterlimit: 10;
  box-shadow: inset 0px 0px 0px #75b2f5;
  z-index: -1;
}
.checkmark__circle {
  stroke-dasharray: 166;
  stroke-dashoffset: 166;
  stroke-width: 8;
  stroke-miterlimit: 10;
  stroke: #5094de;
  fill: none;
  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}
.checkmark__check {
  transform-origin: 50% 50%;
  stroke-dasharray: 40;
  stroke-dashoffset: 40;
  stroke: #FFF;
  stroke-width: 5;
}

.button {
  cursor: pointer;
  font-size: 1rem;
  line-height: 1rem;
  background: #5094de;
  color: #FFF;
  padding: 10px 15px;
  border: none;
  outline: none;
  display: inline-block;
  transition: all .3s;
}
.button:hover {
  background: #7baee6;
}
.button.previous {
  margin-right: 5px;
}
.button.disabled {
  background: #c3c3c3;
  cursor: default;
}

@@keyframes stroke {
  to {
    stroke-dashoffset: 0;
  }
}
@@keyframes scale {
  50% {
    transform: translateX(-50%) scale3d(1.5, 1.5, 1.5);
  }
  100% {
    transform: scale3d(0);
  }
}
@@keyframes fill {
  100% {
    box-shadow: inset 0px 0px 0px 30px #75b2f5;
  }
}
@@keyframes gettingOut {
  0% {
    transform: translateY(0%);
  }
  30% {
    transform: translateY(100px);
  }
  100% {
    transform: translateY(-200%);
  }
}
@@keyframes fadeIn {
  100% {
    opacity: 1;
  }
}



</style>



<script>
    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } var Steps = function () {
        function Steps(wizard) {
            _classCallCheck(this, Steps);
            this.wizard = wizard;
            this.steps = this.getSteps();
            this.stepsQuantity = this.getStepsQuantity();
            this.currentStep = 0;
        } _createClass(Steps, [{
            key: 'setCurrentStep', value: function setCurrentStep(

                currentStep) {
                this.currentStep = currentStep;
            }
        }, {
            key: 'getSteps', value: function getSteps() {
                return this.wizard.getElementsByClassName('step');
            }
        }, {
            key: 'getStepsQuantity', value: function getStepsQuantity() {
                return this.getSteps().length;
            }
        }, {
            key: 'handleConcludeStep', value: function handleConcludeStep() {
                this.steps[this.currentStep].classList.add('-completed');
            }
        }, {
            key: 'handleStepsClasses', value: function handleStepsClasses(

                movement) {
                if (movement > 0)
                    this.steps[this.currentStep - 1].classList.add('-completed'); else
                    if (movement < 0)
                        this.steps[this.currentStep].classList.remove('-completed');
            }
        }]); return Steps;
    }(); var


        Panels = function () {
            function Panels(wizard) {
                _classCallCheck(this, Panels);
                this.wizard = wizard;
                this.panelWidth = this.wizard.offsetWidth;
                this.panelsContainer = this.getPanelsContainer();
                this.panels = this.getPanels();
                this.currentStep = 0;

                this.updatePanelsPosition(this.currentStep);
                this.updatePanelsContainerHeight();
            } _createClass(Panels, [{
                key: 'getCurrentPanelHeight', value: function getCurrentPanelHeight() {
                    return this.getPanels()[this.currentStep].offsetHeight + 'px';
                }
            }, {
                key: 'getPanelsContainer', value: function getPanelsContainer() {
                    return this.wizard.querySelector('.panels');
                }
            }, {
                key: 'getPanels', value: function getPanels() {
                    return this.wizard.getElementsByClassName('panel');
                }
            }, {
                key: 'updatePanelsContainerHeight', value: function updatePanelsContainerHeight() {
                    this.panelsContainer.style.height = this.getCurrentPanelHeight();
                }
            }, {
                key: 'updatePanelsPosition', value: function updatePanelsPosition(

                    currentStep) {
                    var panels = this.panels;
                    var panelWidth = this.panelWidth;

                    for (var i = 0; i < panels.length; i++) {
                        if (window.CP.shouldStopExecution(1)) break;
                        panels[i].classList.remove(
                            'movingIn',
                            'movingOutBackward',
                            'movingOutFoward');


                        if (i !== currentStep) {
                            if (i < currentStep) panels[i].classList.add('movingOutBackward'); else
                                if (i > currentStep) panels[i].classList.add('movingOutFoward');
                        } else {
                            panels[i].classList.add('movingIn');
                        }
                    } window.CP.exitedLoop(1);

                    this.updatePanelsContainerHeight();
                }
            }, {
                key: 'setCurrentStep', value: function setCurrentStep(

                    currentStep) {
                    this.currentStep = currentStep;
                    this.updatePanelsPosition(currentStep);
                }
            }]); return Panels;
        }(); var


            Wizard = function () {
                function Wizard(obj) {
                    _classCallCheck(this, Wizard);
                    this.wizard = obj;
                    this.panels = new Panels(this.wizard);
                    this.steps = new Steps(this.wizard);
                    this.stepsQuantity = this.steps.getStepsQuantity();
                    this.currentStep = this.steps.currentStep;

                    this.concludeControlMoveStepMethod = this.steps.handleConcludeStep.bind(this.steps);
                    this.wizardConclusionMethod = this.handleWizardConclusion.bind(this);
                } _createClass(Wizard, [{
                    key: 'updateButtonsStatus', value: function updateButtonsStatus() {
                        if (this.currentStep === 0)
                            this.previousControl.classList.add('disabled'); else

                            this.previousControl.classList.remove('disabled');
                    }
                }, {
                    key: 'updtadeCurrentStep', value: function updtadeCurrentStep(

                        movement) {
                        this.currentStep += movement;
                        this.steps.setCurrentStep(this.currentStep);
                        this.panels.setCurrentStep(this.currentStep);

                        this.handleNextStepButton();
                        this.updateButtonsStatus();
                    }
                }, {
                    key: 'handleNextStepButton', value: function handleNextStepButton() {
                        if (this.currentStep === this.stepsQuantity - 1) {
                            this.nextControl.innerHTML = 'Conclude!';

                            this.nextControl.removeEventListener('click', this.nextControlMoveStepMethod);
                            this.nextControl.addEventListener('click', this.concludeControlMoveStepMethod);
                            this.nextControl.addEventListener('click', this.wizardConclusionMethod);
                        } else {
                            this.nextControl.innerHTML = 'Next';

                            this.nextControl.addEventListener('click', this.nextControlMoveStepMethod);
                            this.nextControl.removeEventListener('click', this.concludeControlMoveStepMethod);
                            this.nextControl.removeEventListener('click', this.wizardConclusionMethod);
                        }
                    }
                }, {
                    key: 'handleWizardConclusion', value: function handleWizardConclusion() {
                        this.wizard.classList.add('completed');
                    }
                }, {
                    key: 'addControls', value: function addControls(

                        previousControl, nextControl) {
                        this.previousControl = previousControl;
                        this.nextControl = nextControl;
                        this.previousControlMoveStepMethod = this.moveStep.bind(this, -1);
                        this.nextControlMoveStepMethod = this.moveStep.bind(this, 1);

                        previousControl.addEventListener('click', this.previousControlMoveStepMethod);
                        nextControl.addEventListener('click', this.nextControlMoveStepMethod);

                        this.updateButtonsStatus();
                    }
                }, {
                    key: 'moveStep', value: function moveStep(

                        movement) {
                        if (this.validateMovement(movement)) {
                            this.updtadeCurrentStep(movement);
                            this.steps.handleStepsClasses(movement);
                        } else {
                            throw 'This was an invalid movement';
                        }
                    }
                }, {
                    key: 'validateMovement', value: function validateMovement(

                        movement) {
                        var fowardMov = movement > 0 && this.currentStep < this.stepsQuantity - 1;
                        var backMov = movement < 0 && this.currentStep > 0;

                        return fowardMov || backMov;
                    }
                }]); return Wizard;
            }();


    var wizardElement = document.getElementById('wizard');
    var wizard = new Wizard(wizardElement);
    var buttonNext = document.querySelector('.next');
    var buttonPrevious = document.querySelector('.previous');

    wizard.addControls(buttonPrevious, buttonNext);
    
</script>

<h2>NewBooking</h2>


<div class="wrapper">
    <div id="wizard" class="wizard">
        <div class="wizard__content">
            <header class="wizard__header">
                <div class="wizard__header-overlay"></div>

                <div class="wizard__header-content">
                    <h1 class="wizard__title">Get start with Javascript!</h1>
                    <p class="wizard__subheading">Start with <span>3</span> simple steps.</p>
                </div>

                <div class="wizard__steps">
                    <nav class="steps">
                        <div class="step">
                            <div class="step__content">
                                <p class="step__number"><i class="fa fa-github-alt"></i></p>
                                <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                                    <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" />
                                    <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
                                </svg>

                                <div class="lines">
                                    <div class="line -start">
                                    </div>

                                    <div class="line -background">
                                    </div>

                                    <div class="line -progress">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="step">
                            <div class="step__content">
                                <p class="step__number"><i class="fa fa-book"></i></p>
                                <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                                    <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" />
                                    <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
                                </svg>

                                <div class="lines">
                                    <div class="line -background">
                                    </div>

                                    <div class="line -progress">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="step">
                            <div class="step__content">
                                <p class="step__number"><i class="fa fa-group"></i></p>
                                <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                                    <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" />
                                    <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
                                </svg>

                                <div class="lines">
                                    <div class="line -background">
                                    </div>

                                    <div class="line -progress">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </nav>
                </div>
            </header>


            <div class="panels">
                <div class="panel">
                    <header class="panel__header">
                        <h2 class="panel__title">Create a Github account</h2>
                        <p class="panel__subheading">With github you can show your projects and find new things everyday!</p>
                    </header>

                    <p class="panel__content">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna culpa qui officia deserunt mollit anim id est laborum.</p>

                    <p class="panel__content">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                </div>

                <div class="panel">
                    <header class="panel__header">
                        <h2 class="panel__title">Learn more about pure Javascript.</h2>
                        <p class="panel__subheading">We have cool frameworks, but none is better then VanillaJS</p>
                    </header>

                    <p class="panel__content">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna culpa qui officia deserunt mollit anim id est laborum.</p>
                    <p class="panel__content">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna culpa qui officia deserunt mollit anim id est laborum.</p>
                </div>

                <div class="panel">
                    <header class="panel__header">
                        <h2 class="panel__title">Stay in touch with the community.</h2>
                        <p class="panel__subheading">Community is everything, and here we do some crazy stuff.</p>
                    </header>

                    <p class="panel__content">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna culpa qui officia deserunt mollit anim id est laborum.</p>
                </div>
            </div>

            <div class="wizard__footer">
                <button class="button previous">Previous</button>
                <button class="button next">Next</button>
            </div>
        </div>

        <h1 class="wizard__congrats-message">
            Congratulations, you are now in a world of pain and suffering!
        </h1>
    </div>
</div>
</html>

